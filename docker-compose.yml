version: '3.9'

services:
  redis-server:
    image: redis:latest
    container_name: redis-server
    ports:
      - "6379:6379"
    networks:
      - push-network
    healthcheck: # Redis 헬스체크 추가
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  mysql-server:
    image: mysql:latest
    container_name: mysql-server
    environment:
      MYSQL_ROOT_PASSWORD: password   # MySQL root 비밀번호 설정
      MYSQL_DATABASE: push_notification_db
    ports:
      - "3306:3306"
    networks:
      - push-network
    healthcheck: # MySQL 헬스체크 추가
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-p$password"]
      interval: 10s
      timeout: 5s
      retries: 3

  push-server:
    image: ssgwoo/go-notification-server:latest  
    container_name: push-server
    ports:
      - "8080:8080"
    depends_on: # Redis와 MySQL이 헬스체크에서 통과한 후 실행
      redis-server:
        condition: service_healthy
      mysql-server:
        condition: service_healthy
    environment:
      - REDIS_HOST=redis-server
      - REDIS_PORT=6379
      - MYSQL_HOST=mysql-server
      - MYSQL_PORT=3306
      - MYSQL_USER=root
      - MYSQL_PASSWORD=password
      - MYSQL_DATABASE=push_notification_db
      - ENV=production  
    networks:
      - push-network

  push-client:
    image: ssgwoo/go-push-client:latest 
    container_name: push-client
    depends_on: # Push-server가 헬스체크에서 통과한 후 실행
      push-server:
        condition: service_healthy
    environment:
      - SERVER_URL=http://push-server:8080
      - TEMPLATE_PATH=/root/templates/*  # 템플릿 경로 추가
    ports:
      - "8081:8081"  # 클라이언트 포트 노출
    networks:
      - push-network

networks:
  push-network:
    driver: bridge